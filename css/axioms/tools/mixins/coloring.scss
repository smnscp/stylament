////
/// @group ax-tools
////

@mixin set-colors($name, $default: null) {
  ---clr-pos: var(--color-#{$name}, #{if($default, var(--color-#{$default}), inherit)});
  ---clr-neg: var(--color-#{$name}-contra, #{if($default, var(--color-#{$default}-contra), inheri)});
}

@mixin use-colors {
  color: var(---clr-fg);
  background-color: var(---clr-bg);
}

@mixin use-colors-inverse {
  color: var(---clr-bg);
  background-color: var(---clr-fg);
}

@mixin alternate-base {
  @include set-colors("alternate");
}

@mixin inverse-base {
  ---clr-fg: var(---clr-neg);
  ---clr-bg: var(---clr-pos);
}

@mixin reverse-base {
  ---clr-fg: var(---clr-pos);
  ---clr-bg: var(---clr-neg);
}

@mixin alternate {
  @include alternate-base;
  @include use-colors;

  :is(h1, h2, h3, h4, h5, h6, hgroup > p) {
    @include set-colors("heading-alternate");
  }

  :where(a:any-link) {
    @include set-colors("links-alternate");
  }
}

@mixin inverse {
  @include use-colors;

  &,
  & *,
  & & &,
  & & & * {
    @include inverse-base;
  }

  & & {
    @include reverse;
  }
}

@mixin reverse {
  @include use-colors;

  &,
  & * {
    @include reverse-base;
  }
}
