////
/// @group ax-tools
////

@use "sass:map";
@use "sass:meta";

/// List CSS custom properties.
///
/// @param {Map} $properties Map of properties with simple literal values.
/// @param {String} $prefix Property name prefix.
/// @output A list of `--<prefix>-*` custom properties with their respective values.
@mixin literal-properties($properties, $prefix) {
  @if $properties {
    @each $name, $value in $properties {
      --#{$prefix}-#{$name}: #{$value};
    }
  }
}

/// Map CSS custom properties via a given function.
///
/// @param {Map} $domain Map of inouts to the mapping function.
/// @param {String} $prefix Property name prefix.
/// @param {Function} $func Mapping function.
/// @output A list of `--<prefix>-*` custom properties with their respective calculated values.
@mixin mapped-properties($domain, $prefix, $func) {
  @if $domain and $func {
    @each $name, $arg in $domain {
      --#{$prefix}-#{$name}: #{meta.call($func, $arg)};
    }
  }
}

/// Map logical to basic CSS custom properties.
///
/// @param {Map} $properties Map of logical properties.
/// @param {String} $prefix Property name prefix.
/// @output A list of `--<prefix>-*` custom properties referring to others.
@mixin logical-properties($properties, $prefix) {
  @if $properties {
    @each $name, $alias in $properties {
      --#{$prefix}-#{$name}: var(--#{$prefix}-#{$alias});
    }
  }
}

/// Generate all configured CSS custom properties.
///
/// @param {Map} $conf Configuration map for this set of properties.
/// @param {String} $prefix Property name prefix.
/// @output A list of mapped, literal, and logical `--<prefix>-*` custom properties.
@mixin configured-properties($conf, $prefix) {
  @if $conf {
    @include mapped-properties(
      map.get($conf, mapped, domain),
      $prefix,
      map.get($conf, mapped, function)
    );
    @include literal-properties(map.get($conf, literal), $prefix);
    @include logical-properties(map.get($conf, logical), $prefix);
  }
}
