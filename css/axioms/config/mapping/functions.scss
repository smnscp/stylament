////
/// @group ax-config
////

/// ### Mapping Functions
///
/// These functions calculate the final property values corresponding to
/// the given domain value.

@use "sass:math";

/// Mapping function to generate [Shadow Scale](./ax-properties.html#css--Shadow%20Scale).
///
/// **N.B.:** We do without the [spread radius][mdn1], so these shadows can be used as
/// [text shadows][mdn2], too.
///
/// [mdn1]: https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow#spread-radius
/// [mdn2]: https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow
///
/// @param {Number} $size The numerical size index.
/// @param {Number<rem>} $offset [0.25rem] The offset radius of the medium shadow.
/// @param {Number<rem>} $blur [0.5rem] The offset radius of the medium shadow.
/// @param {Number} $alpha [0.25] The alpha value of the medium shadow.
/// @param {Number<deg>} $angle [270deg] The direction of the shadow.
/// @param {List<Number{3}>} $color [0 0 0] The color of the shadow (RGB).
/// @return {String} The mapped value, a CSS <shadow>.
@function shadow(
  $size,
  $offset: 0.25rem,
  $blur: 0.5rem,
  $alpha: 0.25,
  $angle: 270deg,
  $color: 0 0 0
) {
  $size-factor: math.pow(2, $size);
  $size-x: $offset * math.cos($angle) * $size-factor;
  $size-y: - $offset * math.sin($angle) * $size-factor;
  $size-blur: $blur * $size-factor;
  $size-alpha: $alpha * (1 + math.div($size, 16));
  @return "#{$size-x} #{$size-y} #{$size-blur} rgb(#{$color} / #{$size-alpha})";
}
