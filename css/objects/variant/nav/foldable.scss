////
/// @group ob-variant
////

@use "sass:map";
@use "../../../axioms/properties/io" as *;
@use "../../../axioms/properties/specific/layout/container";
@use "../../../axioms/generic/coloring";
@use "../../../idioms/navigation/menubar";
@use "../../../utilities/layout/primitive/switcher";

/// ## Foldable Navigation Menu
///

/// Foldable navigation menu.
nav.var-foldable {
  display: flex;
  flex-direction: row;
  align-items: flex-start;

  & > input[id^="-toggle-state"],
  & > label[for^="-toggle-state"] {
    display: none;
  }

  & > menu {
    flex-grow: 1;
  }
}

/// Menu when folded.
@mixin menu-folded {
  max-inline-size: 0;
  padding-inline: 0;
  border-inline: 0;
}

/// Toggle when folded.
@mixin toggle-folded {
  display: block;
  display: grid;
  border: var(---toggle-folded-border, var(---toggle-border));
  border-radius: var(---toggle-folded-radius, var(---toggle-radius));
  box-shadow: var(---toggle-folded-shadow, var(---toggle-shadow));
  content: var(---toggle-folded-content, var(---toggle-content, "⋯"));
}

/// Common traits of foldable menu.
/// Allows to toggle the display of the menu.
@mixin menu-foldable {
  & > label[for^="-toggle-state"] {
    cursor: context-menu;
    display: block;
    @include coloring.set-colors("nav-toggle", "alternate");

    // Toggle
    & > *,
    &:empty::after {
      @include coloring.use-colors;
      display: block; // Fallback
      display: grid; // More robust content placement.
      position: relative; // Place over backdrop.
      max-inline-size: unset;
      inline-size: var(---toggle-size);
      block-size: var(---toggle-size);
      padding: var(---toggle-padding);
      border: var(---toggle-border);
      margin: 0;
      font-size: calc(var(---toggle-size) - 2 * var(---toggle-padding));
      line-height: 1;
      text-align: center;
      place-content: center center;
      font-weight: svar(font-weight-emphasis);
      transition: all 0.3s svar(easing-default);
      border-radius: var(---toggle-radius);
      box-shadow: var(---toggle-shadow);
      content: var(---toggle-content, "⋮");
    }

    & > * + * {
      display: none;
    }
  }

  & > menu {
    margin-bottom: -100%; // Do not occupy flow space when foldable.
    max-inline-size: 100%;
    overflow: hidden;
    transition: max-inline-size 0.3s svar(easing-default);
  }
}

/// Always foldable menu.
/// @name Without Modifier
nav.var-foldable:not(.\+only-when-stacked) {
  @include menu-foldable;

  // Folded state on wide screen. (Only when explicitly toggled.)
  @media (min-width: menubar.$nav-wide) {
    & > input[id^="-toggle-state"]:checked {
      & ~ menu {
        @include menu-folded;
      }

      & ~ label[for^="-toggle-state"] > :not(:last-child) {
        display: none;
      }

      & ~ label[for^="-toggle-state"] > :last-child,
      & ~ label[for^="-toggle-state"]:empty::after {
        @include toggle-folded;
      }
    }
  }
}

/// Menu foldable only when stacked.
/// @name Modifier: +only-when-stacked
nav.var-foldable.\+only-when-stacked {
  @media (max-width: menubar.$nav-wide) {
    @include menu-foldable;
  }
}

/// Special behavior on narrow screen: Act as overlay with backdrop.
/// @name Modal menu on narrow screen
nav.var-foldable {
  @media (max-width: menubar.$nav-wide) {
    & > input[id^="-toggle-state"] {
      // Unfolded state on narrow screen.
      &:checked {
        // Use `label` as backdrop. Clicking on it toggles the state.
        & ~ label[for^="-toggle-state"]::before {
          content: "";
          position: absolute;
          inset: 0;
          block-size: 100vh;
          background: rgba(0, 0, 0, 0.5);
        }
      }

      // Folded state on narrow screen. (This is the default, as in not checked.)
      &:not(:checked) {
        & ~ menu {
          @include menu-folded;
        }

        & ~ label[for^="-toggle-state"] > :not(:last-child) {
          display: none;
        }

        & ~ label[for^="-toggle-state"] > :last-child,
        & ~ label[for^="-toggle-state"]:empty::after {
          @include toggle-folded;
        }
      }
    }

    & > menu {
      position: relative; // Place over backdrop.
      margin-inline: 0; // Revert potential center layout.
    }
  }
}

/// Places toggle to the inline end (rhs in Latin).
/// This only has an effect if the menu is foldable.
/// @name Modifier: +end
nav.var-foldable.\+end {
  flex-direction: row-reverse;
}
